{"version":3,"sources":["components/NewTodoForm/NewTodoForm.jsx","shapes/TodoShape.js","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","App.js","index.js"],"names":["NewTodoForm","addNewTodo","useState","todoTitle","setTodoTitle","onSubmit","event","preventDefault","length","type","value","onChange","target","className","placeholder","PropTypes","number","isRequired","bool","string","TodoItem","item","classnames","completed","title","TodoList","items","map","key","id","defaultProps","App","todoList","setTodoList","activeTodos","setActiveTodos","newTodo","Date","currentActiveTodos","filter","todo","htmlFor","href","ReactDOM","render","document","getElementById"],"mappings":"mQAGaA,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACXC,mBAAS,IADE,mBACtCC,EADsC,KAC3BC,EAD2B,KAoB7C,OACE,0BAAMC,SAZc,SAACC,GACrBA,EAAMC,iBAEDJ,EAAUK,SAIfP,EAAWE,GACXC,EAAa,OAKX,2BACEK,KAAK,OACLC,MAAOP,EACPQ,SAtBoB,SAACL,GAAW,IAC5BI,EAAUJ,EAAMM,OAAhBF,MAERN,EAAaM,IAoBTG,UAAU,WACVC,YAAY,6B,mBC3BdC,IAAUC,OAAOC,WACVF,IAAUG,KAAKD,WACnBF,IAAUI,OAAOF,W,eCAbG,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,wBAAIR,UAAWS,IAAW,CACxBC,UAAWF,EAAKE,aAGhB,yBAAKV,UAAU,QACb,2BAAOJ,KAAK,WAAWI,UAAU,WACjC,+BAAQQ,EAAKG,OACb,4BAAQf,KAAK,SAASI,UAAU,aAElC,2BAAOJ,KAAK,OAAOI,UAAU,WCVpBY,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,wBAAIb,UAAU,aACXa,EAAMC,KAAI,SAAAN,GAAI,OACb,kBAAC,EAAD,CAAUO,IAAKP,EAAKQ,GAAIR,KAAMA,OAGhC,wBAAIR,UAAU,aACZ,yBAAKA,UAAU,QACb,2BAAOJ,KAAK,WAAWI,UAAU,WACjC,4CACA,4BAAQJ,KAAK,SAASI,UAAU,aAElC,2BAAOJ,KAAK,OAAOI,UAAU,UAG/B,wBAAIA,UAAU,WACZ,yBAAKA,UAAU,QACb,2BAAOJ,KAAK,WAAWI,UAAU,WACjC,0CACA,4BAAQJ,KAAK,SAASI,UAAU,aAElC,2BAAOJ,KAAK,OAAOI,UAAU,UAG/B,4BACE,yBAAKA,UAAU,QACb,2BAAOJ,KAAK,WAAWI,UAAU,WACjC,6CACA,4BAAQJ,KAAK,SAASI,UAAU,aAElC,2BAAOJ,KAAK,OAAOI,UAAU,YASnCY,EAASK,aAAe,CACtBJ,MAAO,ICzCT,IA8DeK,EA9DH,WAAO,IAAD,EACgB7B,mBAAS,IADzB,mBACT8B,EADS,KACCC,EADD,OAEsB/B,mBAAS,GAF/B,mBAETgC,EAFS,KAEIC,EAFJ,KAoBhB,OACE,6BAAStB,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCAEA,kBAAC,EAAD,CAAaZ,WArBA,SAACuB,GAClB,IAAMY,EAAU,CACdP,IAAK,IAAIQ,KACTd,WAAW,EACXC,SAGIc,EAAqBN,EAASO,QAClC,SAAAC,GAAI,OAAKA,EAAKjB,aACdf,OAAS,EAEXyB,EAAY,GAAD,mBAAKD,GAAL,CAAeI,KAE1BD,EAAeG,OAWb,6BAASzB,UAAU,QACjB,2BAAOJ,KAAK,WAAWoB,GAAG,aAAahB,UAAU,eACjD,2BAAO4B,QAAQ,cAAf,wBAEA,kBAAC,EAAD,CAAUf,MAAOM,KAGnB,4BAAQnB,UAAU,UAChB,0BAAMA,UAAU,cAAhB,UACMqB,EADN,gBAIA,wBAAIrB,UAAU,WACZ,4BACE,uBAAG6B,KAAK,KAAK7B,UAAU,YAAvB,QAGF,4BACE,uBAAG6B,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQjC,KAAK,SAASI,UAAU,mBAAhC,sBCjDR8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e8603c63.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const NewTodoForm = ({ addNewTodo }) => {\n  const [todoTitle, setTodoTitle] = useState('');\n\n  const handleInputChange = (event) => {\n    const { value } = event.target;\n\n    setTodoTitle(value);\n  };\n\n  const createNewTodo = (event) => {\n    event.preventDefault();\n\n    if (!todoTitle.length) {\n      return;\n    }\n\n    addNewTodo(todoTitle);\n    setTodoTitle('');\n  };\n\n  return (\n    <form onSubmit={createNewTodo}>\n      <input\n        type=\"text\"\n        value={todoTitle}\n        onChange={handleInputChange}\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n      />\n    </form>\n  );\n};\n\nNewTodoForm.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const TodoShape = {\n  id: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { TodoShape } from '../../shapes/TodoShape';\n\nexport const TodoItem = ({ item }) => (\n  <li className={classnames({\n    completed: item.completed,\n  })}\n  >\n    <div className=\"view\">\n      <input type=\"checkbox\" className=\"toggle\" />\n      <label>{item.title}</label>\n      <button type=\"button\" className=\"destroy\" />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  item: PropTypes.shape(TodoShape).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoShape } from '../../shapes/TodoShape';\nimport {TodoItem} from '../TodoItem';\n\nexport const TodoList = ({ items }) => (\n  <ul className=\"todo-list\">\n    {items.map(item => (\n      <TodoItem key={item.id} item={item} />\n    ))}\n\n    <li className=\"completed\">\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>qwertyuio</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n    <li className=\"editing\">\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>zxcvbnm</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n    <li>\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>1234567890</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  </ul>\n);\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape(TodoShape)),\n};\n\nTodoList.defaultProps = {\n  items: [],\n};\n","import React, { useState } from 'react';\nimport { NewTodoForm } from './components/NewTodoForm';\nimport { TodoList } from './components/TodoList';\n\nconst App = () => {\n  const [todoList, setTodoList] = useState([]);\n  const [activeTodos, setActiveTodos] = useState(0);\n\n  const addNewTodo = (title) => {\n    const newTodo = {\n      id: +new Date(),\n      completed: false,\n      title,\n    };\n\n    const currentActiveTodos = todoList.filter(\n      todo => !todo.completed,\n    ).length + 1;\n\n    setTodoList([...todoList, newTodo]);\n\n    setActiveTodos(currentActiveTodos);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <NewTodoForm addNewTodo={addNewTodo} />\n      </header>\n\n      <section className=\"main\">\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodoList items={todoList} />\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {`${activeTodos} items left`}\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}